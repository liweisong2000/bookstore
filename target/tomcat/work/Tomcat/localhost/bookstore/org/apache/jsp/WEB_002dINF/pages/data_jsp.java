/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-05-26 15:36:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class data_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html style=\"height: 100%\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body style=\"height: 100%; margin: 0\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"container\" style=\"height: 100%\"></div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/echarts.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    var json='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.json}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("';\r\n");
      out.write("\r\n");
      out.write("    var jsonobj=JSON.parse(json);//将字符串转换成JavaScript对象\r\n");
      out.write("    //获取json中的数值\r\n");
      out.write("    var dataName = [];\r\n");
      out.write("    var dataNum = [];\r\n");
      out.write("    var temp = jsonobj;\r\n");
      out.write("\r\n");
      out.write("    //匿名函数解析json串中的数值，关键点\r\n");
      out.write("    (function() {\r\n");
      out.write("        for(var i = 0; i < temp.length; i++) {\r\n");
      out.write("            dataName.push(temp[i].bookname);\r\n");
      out.write("            dataNum.push(temp[i].number);\r\n");
      out.write("        }\r\n");
      out.write("    })();\r\n");
      out.write("\r\n");
      out.write("    var dom = document.getElementById(\"container\");\r\n");
      out.write("    var a=\"ss\";\r\n");
      out.write("    var myChart = echarts.init(dom);\r\n");
      out.write("    var app = {};\r\n");
      out.write("\r\n");
      out.write("    app.title = '环形图';\r\n");
      out.write("\r\n");
      out.write("    option = {\r\n");
      out.write("        title: {\r\n");
      out.write("            text: '购买统计',\r\n");
      out.write("            left: 'center'\r\n");
      out.write("        },\r\n");
      out.write("        tooltip: {\r\n");
      out.write("            trigger: 'item'\r\n");
      out.write("        },\r\n");
      out.write("        legend: {\r\n");
      out.write("            orient: 'vertical',\r\n");
      out.write("            left: 'left'\r\n");
      out.write("        },\r\n");
      out.write("        series: [\r\n");
      out.write("            {\r\n");
      out.write("                name: 'Access From',\r\n");
      out.write("                type: 'pie',\r\n");
      out.write("                radius: '50%',\r\n");
      out.write("                data: (function() { //饼状图需要函数解析数字内的值\r\n");
      out.write("                    var res = [];\r\n");
      out.write("                    var len = dataName.length;\r\n");
      out.write("                    while(len--) {\r\n");
      out.write("                        res.push({\r\n");
      out.write("                            name: dataName[len],\r\n");
      out.write("                            value: dataNum[len]\r\n");
      out.write("                        });\r\n");
      out.write("                    }\r\n");
      out.write("                    return res;\r\n");
      out.write("                })(),\r\n");
      out.write("                emphasis: {\r\n");
      out.write("                    itemStyle: {\r\n");
      out.write("                        shadowBlur: 10,\r\n");
      out.write("                        shadowOffsetX: 0,\r\n");
      out.write("                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        ]\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    if(option && typeof option === \"object\") {\r\n");
      out.write("        myChart.setOption(option, true);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<a style=\"position:absolute;left:1330px;top:622px;font-size:20px;\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/index\">返回首页</a>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
